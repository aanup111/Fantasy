[{"C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\index.js":"1","C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\App.js":"2","C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\components\\Player.js":"3","C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\components\\List.js":"4"},{"size":412,"mtime":1611697041789,"results":"5","hashOfConfig":"6"},{"size":2084,"mtime":1616100413133,"results":"7","hashOfConfig":"6"},{"size":1657,"mtime":1615248152008,"results":"8","hashOfConfig":"6"},{"size":1694,"mtime":1614904010269,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"pem3xt",{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"12"},"C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\index.js",[],["23","24"],"C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\App.js",["25","26","27","28","29"],"import './App.css';\nimport axios from 'axios';\nimport React, {useState, useEffect, Fragment} from 'react';\nimport List from './components/List'\nimport Player from './components/Player'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\n\n\n\nfunction App() {\nconst [allData, setAllData] = useState([])\nconst [names, setNames] = useState([])\nconst [playerName, setPlayerName] = useState('Search For Player Above')\nconst [specPlayer, setSpecPlayer] = useState([])\nconst [playerId, setPlayerId] = useState(0)\nconst [stats, setStats] = useState([])\nconst [isDisplay, setIsDisplay] = useState(false)  \nlet i = 1 \nlet tempArr = []\nlet tempName \n\nuseEffect( () => {\n  axios.get(`https://www.balldontlie.io/api/v1/players?search=${playerName}`)\n  .then (res =>{\n     setSpecPlayer(res.data)  \n })\n if(playerName !== 'Search For Player Above'){\n  setIsDisplay(true)\n}\n}, [playerName])\n\nuseEffect( () => {\n  if (specPlayer.data){\n  setPlayerId(specPlayer.data.map(player => (\n   player.id\n  )))\n}\n}, [specPlayer])\n\nuseEffect( () => {\n  axios.get(`https://www.balldontlie.io/api/v1/season_averages?season=2018&player_ids[]=${playerId}`)\n    .then (res =>{\n     setStats(res.data)\n    })\n  }, [playerId])\n\n useEffect ( () => {\n  for(i; i<36; i++) {\n  axios.get(`https://www.balldontlie.io/api/v1/players?per_page=100&page=${i}`)\n  .then (res =>{\n     setAllData(oladArr => [...oladArr,res.data])\n })\n console.log('ran ', i)\n}\n}, [])\n\nuseEffect ( () => {\n  tempArr.push(allData.map(initial =>(\n    initial.data.filter (names => names.height_feet !=null).map\n    (names => (\n      names.first_name.toLowerCase() + ' ' + names.last_name.toLowerCase()\n    ))\n  )))\n  tempName = tempArr.join()\n  setNames(tempName.split(','))\n}, [allData])\n \n\n\n\n  return (\n<div className='App' >\n    <div id='list'>\n    <List names={names} setPlayerName={setPlayerName}></List>\n    </div>\n    \n    <div id='parent'>\n    <Player playerName={playerName} specPlayer={specPlayer} \n            stats={stats} playerId={playerId} isDisplay={isDisplay}></Player>\n</div>\n\n</div>\n\n  );\n}\n\n\nexport default App;\n","C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\components\\Player.js",["30"],"import React, { Fragment, useState } from 'react';\r\nimport './Player.css';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst Player = ({playerName, specPlayer,stats, playerId, isDisplay}) => {\r\n  return (\r\n  <Fragment>\r\n        \r\n        {specPlayer.data &&  <div id='player-info'> \r\n        {isDisplay && <div> \r\n        <h2>Player Info</h2> \r\n         {specPlayer.data.map(player => (\r\n            <ul key={player.id}>\r\n                <li>Name: {player.first_name + ' ' + player.last_name} </li>\r\n                <li>Position: {player.position} </li>\r\n                <li>Height: {player.height_feet + \"'\" + player.height_inches } </li>\r\n                <li>Weight: {player.weight_pounds} lb </li>\r\n                <li>Team: {player.team.abbreviation} </li> \r\n                <li>Team: {player.team.city} </li> \r\n           </ul> \r\n        ))}\r\n        </div> }\r\n         </div> } \r\n         <TransitionGroup>\r\n         <CSSTransition\r\n          timeout={5000}\r\n          classNames=\"fade\"\r\n        > \r\n  <h1>{playerName}</h1>\r\n </CSSTransition>\r\n </TransitionGroup>\r\n       \r\n        {stats.data &&\r\n        <div id='player-stats'>\r\n          {isDisplay && <div>\r\n        <h2>Player Stats</h2>\r\n        { stats.data.map(stats =>\r\n        <ul key={playerId}>\r\n          <li>Points: {stats.pts}</li>\r\n          <li>Rebounds: {stats.reb}</li>\r\n          <li>Assists: {stats.ast}</li>\r\n          <li>Steals: {stats.stl}</li>\r\n          <li>Blocks: {stats.blk}</li>\r\n          <li>Turnover: {stats.turnover}</li>\r\n        </ul>\r\n        )}   \r\n    </div>}\r\n    </div> }\r\n    \r\n  </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Player",["31","32"],"C:\\Users\\Dat Boi\\react-apps\\Fantasy\\src\\components\\List.js",["33"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport './List.css';\r\nimport {CSSTransition} from 'react-transition-group';\r\nconst List = ({names, setPlayerName}) =>  {\r\nconst [listName, setListName] = useState('')\r\nconst [tempArr, setTempArr] = useState([])\r\nconst [sizeLength, setSizeLength] = useState(0)\r\nconst [isDisplay, setIsDisplay] = useState(false)\r\n\r\n\r\nuseEffect( () => {\r\n  if(tempArr.length > 10){\r\n    setSizeLength(10) \r\n  } else if (tempArr.length < 2) {\r\n    setSizeLength(2)\r\n  } else\r\n  setSizeLength(tempArr.length)\r\n}, [tempArr])\r\n\r\n\r\nconst filterPlayer = (val) => {\r\n    if(val.length >= 3) {\r\n        setTempArr(names.filter (names => ( \r\n        names.toLowerCase().indexOf(val) >= 0\r\n        )))\r\n        setIsDisplay(true)\r\n      } else {\r\n        setIsDisplay(false)\r\n      }  \r\n      setListName(val)\r\n}\r\n\r\nreturn (\r\n        <Fragment>\r\n        <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={1000}\r\n        classNames=\"fade\"\r\n        >\r\n        <div class='search-bar'>\r\n            <input class='search-text' type='text' autoComplete='off' \r\n            placeholder='Search for player here'\r\n            onChange={(e) => filterPlayer(e.target.value.toLowerCase())}\r\n            ></input>\r\n        </div>\r\n        </CSSTransition>\r\n\r\n        <div class = 'player-list' >\r\n      { isDisplay &&\r\n     <select id = 'drop-list'\r\n     onChange = {(e) => setPlayerName(e.target.value)}size= {sizeLength} >\r\n       {tempArr.map(names => (\r\n         <option id ='list-text' key={tempArr.indexOf(names)} value={names}>{names}</option>\r\n       ))}\r\n     </select> }\r\n      </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default List",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":37,"nodeType":"40","messageId":"41","endLine":3,"endColumn":45},{"ruleId":"38","severity":1,"message":"42","line":6,"column":9,"nodeType":"40","messageId":"41","endLine":6,"endColumn":22},{"ruleId":"38","severity":1,"message":"43","line":6,"column":24,"nodeType":"40","messageId":"41","endLine":6,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":56,"column":4,"nodeType":"46","endLine":56,"endColumn":6,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":65,"column":14,"nodeType":"49","endLine":65,"endColumn":28},{"ruleId":"38","severity":1,"message":"50","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":35},{"ruleId":"34","replacedBy":"51"},{"ruleId":"36","replacedBy":"52"},{"ruleId":"38","severity":1,"message":"53","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'i'. Either include it or remove the dependency array.","ArrayExpression",["56"],"Assignments to the 'tempName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useState' is defined but never used.",["54"],["55"],"'listName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [i]",{"range":"59","text":"60"},[1435,1437],"[i]"]